CLASS eq net/minecraft/util/math/Direction
	CLASS eq$a Axis
		FIELD a X Leq$a;
		FIELD b Y Leq$a;
		FIELD c Z Leq$a;
		FIELD d BY_NAME Ljava/util/Map;
		FIELD e name Ljava/lang/String;
		METHOD a getName ()Ljava/lang/String;
		METHOD a choose (DDD)D
		METHOD a choose (III)I
		METHOD a fromName (Ljava/lang/String;)Leq$a;
		METHOD b isVertical ()Z
		METHOD c isHorizontal ()Z
		METHOD d getType ()Leq$c;
	CLASS eq$b AxisDirection
		FIELD a POSITIVE Leq$b;
		FIELD b NEGATIVE Leq$b;
		FIELD c offset I
		FIELD d desc Ljava/lang/String;
		METHOD a offset ()I
	CLASS eq$c Type
		FIELD c facingArray [Leq;
		FIELD d axisArray [Leq$a;
		METHOD a random (Ljava/util/Random;)Leq;
	FIELD g id I
	FIELD h idOpposite I
	FIELD i idHorizontal I
	FIELD j name Ljava/lang/String;
	FIELD k axis Leq$a;
	FIELD l direction Leq$b;
	FIELD m vector Lff;
	FIELD n ALL [Leq;
	FIELD o NAME_MAP Ljava/util/Map;
	FIELD p ID_TO_DIRECTION [Leq;
	FIELD q HORIZONTAL [Leq;
	METHOD a getId ()I
	METHOD a fromRotation (D)Leq;
	METHOD a getFacing (DDD)Leq;
	METHOD a getFacing (FFF)Leq;
	METHOD a byId (I)Leq;
	METHOD a getEntityFacingOrder (Laer;)[Leq;
	METHOD a rotateClockwise (Leq$a;)Leq;
	METHOD a from (Leq$a;Leq$b;)Leq;
	METHOD a get (Leq$b;Leq$a;)Leq;
	METHOD a byName (Ljava/lang/String;)Leq;
	METHOD a random (Ljava/util/Random;)Leq;
	METHOD b getHorizontal ()I
	METHOD b fromHorizontal (I)Leq;
	METHOD c getDirection ()Leq$b;
	METHOD d getOpposite ()Leq;
	METHOD e rotateYClockwise ()Leq;
	METHOD f rotateYCounterclockwise ()Leq;
	METHOD g getOffsetX ()I
	METHOD h getOffsetY ()I
	METHOD i getOffsetZ ()I
	METHOD j getName ()Ljava/lang/String;
	METHOD k getAxis ()Leq$a;
	METHOD l asRotation ()F
	METHOD n getVector ()Lff;
	METHOD o rotateXClockwise ()Leq;
	METHOD q rotateZClockwise ()Leq;
